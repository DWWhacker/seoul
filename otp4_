<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>OTP</title>
  <link rel="stylesheet" href="2_otp.css" />
  <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
</head>
<body>
  <div class="container">
    <header>
      <i class="bx bxs-check-shield"></i>
    </header>
    <h4>Enter OTP Code</h4>
    <form>
      <div class="input-field">
        <input type="number" />
        <input type="number" disabled />
        <input type="number" disabled />
        <input type="number" disabled />
      </div>
      <button>Verify OTP</button>
    </form>
  </div>
</body>
<script>
  // 모든 input 요소들을 가져옵니다.
  const inputs = document.querySelectorAll('input');

  // button 요소를 가져옵니다.
  const button = document.querySelector('button');

  // 각 input 요소에 이벤트 리스너를 추가합니다.
  inputs.forEach((el, index) => {
    el.addEventListener('keyup', (e) => {
      // 현재 input 요소를 currentInput으로 지정합니다.
      const currentInput = el;
      // 다음 input 요소를 nextInput으로 지정합니다.
      const nextInput = el.nextElementSibling;
      // 이전 input 요소를 prevInput으로 지정합니다.
      const prevInput = el.previousElementSibling;

      // 입력된 값이 한 자리보다 많으면 첫 자리만 남기고 나머지는 제거합니다.
      if (currentInput.value.length >= 1) {
        currentInput.value = currentInput.value.substring(0, 1);
        // 현재 input 요소의 포커스를 해제합니다.
        currentInput.blur();
      }

      // 다음 input 요소가 비활성화 상태이며 현재 input 요소가 비어있지 않으면
      // 다음 input 요소를 활성화하고 포커스를 이동시킵니다.
      if (nextInput && nextInput.hasAttribute('disabled') && currentInput.value !== '') {
        nextInput.removeAttribute('disabled');
        nextInput.focus();
      }

      // 백스페이스 키가 눌렸을 때의 처리
      if (e.key === 'Backspace') {
        // 각 input 요소를 순회하면서
        inputs.forEach((el2, index2) => {
          // 현재 요소와 그 이후 요소들을 비활성화하고 값을 지웁니다.
          if (index <= index2) {
            currentInput.value = '';
            currentInput.setAttribute('disabled', true);
            // 이전 요소가 있으면 포커스를 이전 요소로 이동시킵니다.
            if (prevInput) prevInput.focus();
          }
          // 첫 번째 input 요소는 항상 활성화 상태로 유지합니다.
          if (index === 0) {
            inputs[0].removeAttribute('disabled');
            inputs[0].focus();
          }
        });
      }

      // 마지막 input 요소가 채워지면 버튼 색상을 변경합니다.
      if (inputs[inputs.length - 1].value !== '') {
        button.classList.add('active');
      } else {
        button.classList.remove('active');
      }
    });
  });
</script>
</html>
주석 설명
모든 input 요소들을 가져옵니다.: document.querySelectorAll('input')를 사용하여 모든 input 요소를 가져옵니다.
button 요소를 가져옵니다.: document.querySelector('button')를 사용하여 버튼 요소를 가져옵니다.
각 input 요소에 이벤트 리스너를 추가합니다.: inputs.forEach를 사용하여 각 input 요소에 keyup 이벤트 리스너를 추가합니다.
현재 input 요소를 currentInput으로 지정합니다.: 현재 이벤트가 발생한 input 요소를 currentInput으로 지정합니다.
다음 input 요소를 nextInput으로 지정합니다.: 현재 input 요소의 다음 형제를 nextInput으로 지정합니다.
이전 input 요소를 prevInput으로 지정합니다.: 현재 input 요소의 이전 형제를 prevInput으로 지정합니다.
입력된 값이 한 자리보다 많으면 첫 자리만 남기고 나머지는 제거합니다.: 입력된 값이 두 자리 이상이면 첫 번째 문자만 남깁니다.
현재 input 요소의 포커스를 해제합니다.: 현재 input 요소의 포커스를 제거합니다.
다음 input 요소가 비활성화 상태이며 현재 input 요소가 비어있지 않으면 다음 input 요소를 활성화하고 포커스를 이동시킵니다.: 다음 input 요소를 활성화하고 포커스를 이동시킵니다.
백스페이스 키가 눌렸을 때의 처리: 백스페이스 키를 누르면 이전 요소로 이동하고 현재 요소 이후의 값들을 지웁니다.
각 input 요소를 순회하면서: inputs.forEach를 사용하여 각 input 요소를 순회합니다.
현재 요소와 그 이후 요소들을 비활성화하고 값을 지웁니다.: 현재 요소와 그 이후 요소들을 비활성화하고 값을 지웁니다.
이전 요소가 있으면 포커스를 이전 요소로 이동시킵니다.: 이전 요소가 있으면 포커스를 이전 요소로 이동시킵니다.
첫 번째 input 요소는 항상 활성화 상태로 유지합니다.: 첫 번째 input 요소는 항상 활성화 상태로 유지합니다.
마지막 input 요소가 채워지면 버튼 색상을 변경합니다.: 마지막 input 요소가 채워지면 버튼의 색상을 변경합니다.





